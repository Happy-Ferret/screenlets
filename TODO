--------------------------------------------------------------------------------
  Screenlets - TODO LIST
--------------------------------------------------------------------------------

+ TODO: core
------------
- add __api_version__ attribute to Screenlet for performing version checks
- check if switching themes still slowly increases the memory usage
- check if scaling still slowly increases the memory usage 
- check if fileoption and directoryoption still need to be fixed
- merge Martin Owen's rework of the screenlets option system into trunk
- add new sprite-based theme API
- improve config files: use XML files for new theme API (and use HTMLParser 
  class for reading those files)
- use python-webkitgtk bindings for all HTML-based widget rendering and remove
  gtkmozembed
- add/finish missing handlers (if they are still missing):
  on_key_up, on_minimize, on_maxmize, ...
- some useful logging system for a more unified (and optional) logging (or use 
  Python's Logging Module, seehttps://bugs.launchpad.net/screenlets/+bug/232541)
- find a way to get notified about end of a begin_move_drag-operation?
- implement gconf-backend (possibly)


+ TODO: screenlets-manager
--------------------------
- completely separate manager into own project 
- create separated tray-icon applicaton 
- heavily cleanup, organize (and likely partially rewrite) code
- reorganize the UI (beautify left "menu" area, add Tabs for different views,
  add better info area, maybe add screenshots or directly embed wiki page if
  existing ...  much much more room for improvement)
- Drag drop launch of screenlets in the manager (hm, seems not useful to me)
  https://bugs.launchpad.net/screenlets/+bug/208757


+ TODO: individual screenlets
-----------------------------
- separate screenlets into own launchpad project and add global TODO list there
 (if possible, it should be an open project where people can freely upload their 
 own screenlets; that would also for managing all non-core bugs there)


+ TODO: individual screenlets (old, move to new sub project somewhen)
---------------------------------------------------------------------
- Sidebar Screenlet - should auto arrange docked screenlets.. very hard to implement
- Improve the storage screenlet.
  Should be "collecting" everything , looking like a bunch of icons that stack on each
  other offer some intelligent way to retrieve stuff from it. (Stacks?)
- Fix the mail Screenlet
- add missing states to Flower (state 7/8, dry 1, wet 1/2)
- improve Flower's "AI" (it is more "artificial insanity" than intelligence :D)
- add custom services to more screenlets (e.g. Notes, MailCheck, ...)
- Ip Screenlet show local and external ip , also improve layout
- Ring Sensors and Sensors show download upload
- Slideshow allow to start with stoped slideshow
- Tomboy display notes sorted by date
- Trash , comply with new gnome defenitions
- Nowplaying - more player api
- Nowplaying , add support to banshee 1.0 when dbus is ready
- All - removed old code , change the some private funtions to public ones from the core


+ IDEAS: core
-------------
- more "crazy connectivity", e.g. make the PlantScreenlet depend on the 
  WeatherScreenlet's data ... when it rains, the plant is growing and gets a
  blossom and when it is too hot the plant drys out
- allow using additional rendering backends like libclutter or even OpenGL to
  fully take advantage of the accelerated desktop (maybe even make the 
  screenlets completely 3d and embed them into one C-host?)
- screenlets-interoperability-with other apps - aantn seems to be working on it 
  in universal applets branch


+ IDEAS: new screenlets
-----------------------
- ProgressbarScreenlet which can be used by other apps to display progress of
  operations? Would remove the need for UI-threading in the calling application

