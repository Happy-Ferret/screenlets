--------------------------------------------------------------------------------
  Screenlets - POSSIBLE TODO LIST
--------------------------------------------------------------------------------

+ TODO: Core
-----------------------------------
- Implement gconf-backend
- Implement gnome keyring
- switching themes slowly increases the memory usage (maybe rsvg leak?)
- Scaling  slowly increases the memory usage 
- some useful logging system for a more unified (and optional) logging
- more "crazy connectivity", e.g. make the PlantScreenlet depend on the 
  WeatherScreenlet's data ... when it rains, the plant is growing and gets a
  blossom and when it is too hot the plant drys out
- allow using additional rendering backends like libclutter or even OpenGL to
  fully take advantage of the accelerated desktop (maybe even make the 
  screenlets completely 3d and embed them into one C-host?)
- physics (maybe better through a WM-plugin which allows setting gravitation
  and mass for certain window-types?) to be able to stack screenlets on top of
  another and put them on top of other windows and have them stay there and
  move when the other windows are moved, akamaru lib? aantn seems to be working on it
- Remove rsvg rependecies? its not used often can be replaced by gtk draw
- Fix fileoption and directoryoption
- find a way to get notified about end of a begin_move_drag-operation?
- add/finish missing handlers:
  on_key_up, on_minimize, on_maxmize, ...
- ??screenlets should get their own .service-files for dbus to launch the 
  main instance if none is running (causes very long delay on startup - why?)
- [PermanentItem] code cleanup and bug-hunt
- Take advantage of webkit when the python bindings become available
- screenlets-interoperability-with other apps - aantn seems to be working on it 
  in universal applets branch
- Notification area - needs C module...


+ TODO: screenlets-manager

- Improve code readebility

+ TODO: Individual Screenlets:
-----------------------------------

- Jackfield Screenlet(DONE - however jackfield has bugs...)
- Conky Screenlet??? could be done
- MayBe Screenlet - http://gnome-look.org/content/show.php/May-B?content=45837
- Sidebar Screenlet - should auto arrange docked screenlets.. very hard to implement
- Improve the storage screenlet.
  Should be "collecting" everything that is put into it and offer
  some intelligent way to retrieve stuff from it. (Stacks?)
- Fix the mail Screenlet
- add missing states to Flower (state 7/8, dry 1, wet 1/2)
- improve Flower's "AI" (it is more "artificial insanity" than intelligence :D)
- add custom services to more screenlets (e.g. Notes, MailCheck, ...)
- Ip Screenlet show local and external ip , also improve layout
- Ring Sensors and Sensors show download upload
- Slideshow allow to start with stoped slideshow
- Tomboy display notes sorted by date
- Trash , comply with new gnome defenitions
- A Dock Screenlet , kinda like the dock in yahoo widgets
- ColorManagerScreenlet that allows to pick colors from anywhere (and manage
  the colors in a fancy and intuitive way?). Should display in RGB, hex, int.
- ProgressbarScreenlet which can be used by other apps to display progress of
  operations? Would remove the need for UI-threading in the calling application
- PacoScreenlet which allows make/install of tarballs by drag&drop onto some
  icon/symbol and a quick access to gpaco. When dragging a tarball onto the
  icon, it should popup an input-dialog where you can add additional 
  args to ./configure ... and maybe set some more options ... then the screenlet 
  should either popup a nice progress bar or use some ProgressbarScreenlet 
  (should launch paco through gksu to get a secure root-login)
- Nowplaying - more player api
- All - removed old code , change the some private funtions to public ones from the core

